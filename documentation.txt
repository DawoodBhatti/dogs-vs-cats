this folder is a messy mixing bowl

if you are interested in the final output code then these are your two files:
multiple image prediction.py and single image prediction GUI.py 

here is a brief description of what each folder/file is

folders:
dataset_dogs_vs_cats_vs_neither: used for training and validation
final_model_checkpoints: the final trained model saved at each epoch from 1-20
finalize_dogs_vs_cats_vs_neither: used to train final model with no images used for validation 
images_unrelated: empty folders created to hold manually downloaded imagenet data
inference_dogs_vs_cats_vs_neither: data that we wish to run the final model on
tiny_dogs_vs_cats_vs_neither: very small data set for dry runs and debugging
training_model_checkpoints: checkpoints of the model trained with a validation set
virtual_env: holds all the modules and environment info for this project

.gitignore: self explanatory

class-descriptions-boxable.csv: used for manual downloads of imagenet data
create dirs cats and dogs: used to create folder structure
create finalise and training data from direct downloads: what it says
create_tiny_dirs: self explanatory
debugging fiftyone: debugging fiftyone module
documentation: this file
download images also not working: attempt to download data which failed
download images directly: the code used to manually download images from Open Images Dataset V4
download images not working: failed attempt to download data
image prediction old: old attempt to classify
multiple image prediction: code which predicts files contained within a root folder that you specify and creates txt and csv outputs with classification predictions
prepare final dataset: used for creating cat and dog final data folders
README github readme
requirements.txt are the python module requirements for this project
run checkpointed model: code which was used to train model (with a validation set) starting at a given checkpoint
run model: code which was used to train model (with a validation set) 
save final model.py: code trains the final model with checkpoint saving
single image prediction GUI: code which predicts class based on a file that you specify 
training record: info about the models for each checkpoint with training and test set info
validation-annotations-bbox: used for manual downloads of Open Images Dataset V4 data
validation-images-with-rotation: used for manual downloads of Open Images Dataset V4 data